name: 'Terragrunt GitHub Actions'
on:
  - pull_request

env:
  tg_version: '0.77.17'
  tf_version: '1.11.4'
  working_dir: 'terragrunt'
  TG_DOWNLOAD_DIR: '/tmp'
  TERRAGRUNT_DOWNLOAD: '/tmp'

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

  plan:
    runs-on: ubuntu-latest
    needs: [ checks ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Generate Plan
        id: terragrunt-plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'plan -out /github/workspace/terragrunt.tfplan --log-level=debug --inputs-debug'
          tg_comment: 'true'

      - name: List Files in Directory
        working-directory: ${{ github.workspace }}
        run: |
          pwd
          ls -al

      - name: Output Plan Logs terragrunt
        run: cat ${{ github.workspace }}/terragrunt.tfplan || echo "Plan logs not found in terragrunt dir."

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: terragrunt-plan
          path: ${{ github.workspace }}/terragrunt.tfplan


  deploy:
    runs-on: ubuntu-latest
    needs: [ plan ]
    environment: 'dev'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4.2.1
        with:
          name: terragrunt-plan

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'apply terragrunt.tfplan  --log-level=debug --inputs-debug'